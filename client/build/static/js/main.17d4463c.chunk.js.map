{"version":3,"sources":["components/Landing/img/Corndel-Logo.png","components/Game/Game.jsx","components/Landing/usernames.js","components/Landing/Landing.jsx","components/EndGame/EndGame.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Game","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","React","Component","usernames","name","Landing","_this","placeholderName","placeholders","Math","floor","random","length","state","username","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","status","console","log","_this2","src","CorndelLogo","alt","type","id","placeholder","onChange","e","setState","target","value","disabled","validateForm","onClick","handleSubmit","href","App","react_router_dom","react_router","exact","path","component","Home","EndGame","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17d4463c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Corndel-Logo.333d3997.png\";","import React from 'react';\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n                <div className=\"game-heading\">\n                    <h1>Lets play</h1>\n                </div>\n        )\n    }\n}","export default [   {\n    \"name\": \"in_jail_out_soon\"\n}, {\n    \"name\": \"desperate_enuf\"\n}, {\n    \"name\": \"herpes_free_since_03\"\n}, {\n    \"name\": \"kiss-my-axe\"\n}, {\n    \"name\": \"king_0f_dairy_queen\"\n}, {\n    \"name\": \"dildo_swaggins\"\n}, {\n    \"name\": \"shaquille_oatmeal\"\n}, {\n    \"name\": \"ask_yo_girl_about_me\"\n}, {\n    \"name\": \"hugs_for_drugs\"\n}, {\n    \"name\": \"hoosier_daddy\"\n}, {\n    \"name\": \"hugo_balls\"\n}, {\n    \"name\": \"fast_and_the_curious\"\n}]","import React from 'react';\nimport './css/Landing.css';\nimport CorndelLogo from './img/Corndel-Logo.png'\nimport placeholders from './usernames.js';\n\nexport default class Landing extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.placeholderName = placeholders[Math.floor(Math.random() * placeholders.length)]\n\t\tthis.state = {username: \"\"}\n\t}\n\n\tvalidateForm(){\n\t\treturn this.state.username.length > 0;\n\t}\n\n\thandleSubmit(){\n\t\tfetch('/', {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({username: this.state.username})\n\t\t})\n\t\t.then(res => {\n\t\t\tif (res.status === 200){\n\t\t\t\tconsole.log('Working callback.')\n\t\t\t\t// Add redirect to main game.\n\t\t\t}\n\t\t})\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"landing-box\">\n\t\t\t\t<div className=\"landing-header\">\n\t\t\t\t\t<h1>Cards Against</h1>\n\t\t\t\t\t<img className=\"corndel-logo\" src={CorndelLogo} alt=\"Corndel Logo\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"landing-input-box\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tplaceholder={this.placeholderName.name}\n\t\t\t\t\t\tonChange={(e) => this.setState({username: e.target.value})} />\n\t\t\t\t\t\t<button className=\"submit-btn\" disabled={!this.validateForm()} onClick={() => this.handleSubmit()} type=\"submit\">Onwards!</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react';\n\nexport default class Landing extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"landing-heading\">\n                    <h1>Want to play again?</h1>\n                </div>\n                <div>\n                    <button><a href='/'>Back to Home</a></button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route, Redirect} from \"react-router-dom\";\nimport Game from './components/Game/Game';\nimport Home from './components/Landing/Landing';\nimport EndGame from './components/EndGame/EndGame';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/game\" component={Game} />\n      <Route path=\"/endgame\" component={EndGame} />\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}